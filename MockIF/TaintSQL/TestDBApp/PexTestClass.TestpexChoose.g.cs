// <copyright file="PexTestClass.TestpexChoose.g.cs">Copyright ? 2009</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Framework;

namespace MyApplication
{
    public partial class PexTestClass
    {
[TestMethod]
[PexGeneratedBy(typeof(PexTestClass))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestpexChooseThrowsNullReferenceException486()
{
    this.TestpexChoose();
}
[TestMethod]
[PexGeneratedBy(typeof(PexTestClass))]
public void TestpexChoose01()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.DefaultSession
        .At(1, "letsC2", "\0")
        .At(0, "letsC", "\0");
    this.TestpexChoose();
}
[TestMethod]
[PexGeneratedBy(typeof(PexTestClass))]
public void TestpexChoose02()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.DefaultSession
        .At(1, "letsC2", "a")
        .At(0, "letsC", "abcde");
    using (IPexObserveContext observer = PexObserve.NewTest())
    {
      this.TestpexChoose();
      bool ov1 = observer.GetObservedValue<bool>("1");
      Assert.AreEqual<bool>(true, ov1);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PexTestClass))]
public void TestpexChoose05()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.DefaultSession
        .At(1, "letsC2", "uvwxyz")
        .At(0, "letsC", "w");
    using (IPexObserveContext observer = PexObserve.NewTest())
    {
      this.TestpexChoose();
      bool ov2 = observer.GetObservedValue<bool>("2");
      Assert.AreEqual<bool>(true, ov2);
    }
}
    }
}
